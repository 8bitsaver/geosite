name: Publish Geosite data

on:
  workflow_dispatch:
  schedule:
    - cron: '0 22 * * *'

env:
  GEOSITE_SOURCE_REPO: 'v2fly/domain-list-community'
  GEOSITE_SOURCE_GIT_REF: 'master'

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          path: './'

      - name: Prepare
        run: |
          mkdir -p ${{ github.workspace }}/dist
          mkdir -p ${{ github.workspace }}/upload
          echo "TAG_NAME=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Checkout ${{ env.GEOSITE_SOURCE_REPO }} Source code
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GEOSITE_SOURCE_REPO }}
          fetch-depth: 1
          ref: ${{ env.GEOSITE_SOURCE_GIT_REF }}
          path: './domain-list-community'

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
          check-latest: true

      - name: Generate geosite.dat
        run: |
          cd ${{ github.workspace }}/domain-list-community
          go run ./ --datapath=./data --outputname=geosite.dat \
            --outputdir=${{ github.workspace }}/dist --exportlists=category-ads-all,tld-cn,cn,tld-\!cn,geolocation-\!cn,apple,icloud

          cp ${{ github.workspace }}/dist/geosite.dat ${{ github.workspace }}/upload/

      - name: Generate geosite.db & rule-set
        run: |
          cd ${{ github.workspace }}/sing-geosite
          go run ./ --dat-in ${{ github.workspace }}/dist/geosite.dat --sdb-out ${{ github.workspace }}/upload/ --srs-out ${{ github.workspace }}/upload/

      - name: Generate geosite sha256 hash
        run: |
          sha256sum ${{ github.workspace }}/upload/geosite.dat > ${{ github.workspace }}/upload/geosite.dat.sha256sum
          sha256sum ${{ github.workspace }}/upload/geosite.db > ${{ github.workspace }}/upload/geosite.db.sha256sum

      - name: Push to "release" branch
        run: |
          cd upload
          git init
          git config user.name "Epsilon"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.TAG_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ github.token }}@github.com/${{ github.repository }}"
          git push -f origin release

      - name: Upload to Releases
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          body: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            upload/geosite.dat*
            upload/geosite.db*

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.3.2
        with:
          keep_latest: 3
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ github.token }}

      # - name: Upload to Latest Tag
      #   uses: softprops/action-gh-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     tag_name: latest
      #     body: The latest.
      #     draft: false
      #     prerelease: true
      #     files: |
      #       upload/geosite.dat*
      #       upload/geosite.db*

      - name: Remove old Workflow runs records
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 3
          keep_minimum_runs: 3
